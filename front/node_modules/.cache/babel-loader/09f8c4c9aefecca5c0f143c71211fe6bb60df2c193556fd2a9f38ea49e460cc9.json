{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SOL\\\\Desktop\\\\BDC\\\\front\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Table, Button } from \"react-bootstrap\";\nimport \"./dashboard.css\";\nimport { format } from 'date-fns';\n//import AppointmentCard from '../components/AppointmentCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedAppointments, setSelectedAppointments] = useState([]);\n  useEffect(() => {\n    //fetch appointments************************************************\n    const fetchAppointments = async () => {\n      const {\n        data\n      } = await axios.get(\"http://localhost:5000/api/appointments\");\n      setAppointments(data);\n    };\n\n    //fetch contacts messages*******************************************\n    const fetchContacts = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(\"http://localhost:5000/api/contact\");\n        setContacts(data);\n      } catch (err) {\n        setError(\"Error fetching contacts\");\n      }\n    };\n    fetchAppointments();\n    fetchContacts();\n  }, []);\n  const totalAppointments = appointments.length;\n  const handleAppointmentClick = id => {\n    if (!selectedAppointments.includes(id)) {\n      setSelectedAppointments([...selectedAppointments, id]);\n    }\n  };\n  const handleDeleteAppointment = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/appointments/${id}`);\n      setAppointments(appointments.filter(appointment => appointment._id !== id));\n    } catch (err) {\n      setError(\"Error deleting appointment\");\n    }\n  };\n  const handleDeleteContact = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/contact/${id}`);\n      setContacts(contacts.filter(contact => contact._id !== id));\n    } catch (err) {\n      setError(\"Error deleting contact\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-5\",\n        children: [\"Nombre de Rendez-vous: \", totalAppointments]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nom complet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"T\\xE9l\\xE9phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Heur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              backgroundColor: selectedAppointments.includes(appointment._id) ? \"red\" : \"inherit\",\n              color: selectedAppointments.includes(appointment._id) ? \"white\" : \"black\",\n              cursor: \"pointer\"\n            },\n            onClick: () => handleAppointmentClick(appointment._id),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: appointment.phoneNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: format(new Date(appointment.date), 'yyyy-MM-dd')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: format(new Date(`1970-01-01T${appointment.time}Z`), 'HH:mm')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: e => {\n                  e.stopPropagation();\n                  handleDeleteAppointment(appointment._id);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, appointment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-5\",\n        children: \"Contact Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: contact.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: contact.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: contact.subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"message-cell\",\n              children: contact.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(contact.date).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"danger\",\n                onClick: () => handleDeleteContact(contact._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, contact._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardPage, \"A5eeTnl/PH3HQd7qmSCevanwMPw=\");\n_c = DashboardPage;\nexport default DashboardPage;\n\n/* \r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Table, Button } from \"react-bootstrap\";\r\nimport \"./dashboard.css\";\r\nimport { format } from 'date-fns';\r\n//import AppointmentCard from '../components/AppointmentCard';\r\n\r\nconst DashboardPage = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedAppointments, setSelectedAppointments] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    //fetch appointments************************************************\r\n    const fetchAppointments = async () => {\r\n      const { data } = await axios.get(\r\n        \"http://localhost:5000/api/appointments\"\r\n      );\r\n      setAppointments(data);\r\n    };\r\n\r\n\r\n    //fetch contacts messages*******************************************\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"http://localhost:5000/api/contact\");\r\n        setContacts(data);\r\n      } catch (err) {\r\n        setError(\"Error fetching contacts\");\r\n      }\r\n    };\r\n    fetchAppointments();\r\n    fetchContacts();\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n  const totalAppointments = appointments.length;\r\n\r\n  const handleAppointmentClick = (id) => {\r\n    if (!selectedAppointments.includes(id)) {\r\n      setSelectedAppointments([...selectedAppointments, id]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAppointment = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/appointments/${id}`);\r\n      setAppointments(appointments.filter((appointment) => appointment._id !== id));\r\n    } catch (err) {\r\n      setError(\"Error deleting appointment\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteContact = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/contact/${id}`);\r\n      setContacts(contacts.filter((contact) => contact._id !== id));\r\n    } catch (err) {\r\n      setError(\"Error deleting contact\");\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2>Dashboard</h2>\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <section className=\"mt-5\">\r\n        <h3 className=\"mb-5\">Nombre de Rendez-vous: {totalAppointments}</h3>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>phoneNumber</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appointments.map((appointment) => (\r\n              <tr\r\n                key={appointment._id}\r\n                style={{\r\n                  backgroundColor: selectedAppointments.includes(\r\n                    appointment._id\r\n                  )\r\n                    ? \"red\"\r\n                    : \"inherit\",\r\n                  color: selectedAppointments.includes(appointment._id)\r\n                    ? \"white\"\r\n                    : \"black\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => handleAppointmentClick(appointment._id)}\r\n              >\r\n                <td>{appointment.name}</td>\r\n                <td>{appointment.phoneNumber}</td>\r\n                <td>{format(new Date(appointment.date), 'yyyy-MM-dd')}</td>\r\n              <td>{format(new Date(`1970-01-01T${appointment.time}Z`), 'HH:mm')}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDeleteAppointment(appointment._id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </section>\r\n      <section className=\"mt-5\">\r\n        <h2 className=\"mt-5\">Contact Messages</h2>\r\n        {/* <p>Total Contacts: {totalContacts}</p> */ /*}/*\r\n                                                      <Table striped bordered hover responsive>\r\n                                                      <thead>\r\n                                                      <tr>\r\n                                                      <th>Name</th>\r\n                                                      <th>Phone</th>\r\n                                                      <th>Subject</th>\r\n                                                      <th>Message</th>\r\n                                                      <th>Date</th>\r\n                                                      </tr>\r\n                                                      </thead>\r\n                                                      <tbody>\r\n                                                      {contacts.map((contact) => (\r\n                                                      <tr key={contact._id}>\r\n                                                      <td>{contact.name}</td>\r\n                                                      <td>{contact.phone}</td>\r\n                                                      <td>{contact.subject}</td>\r\n                                                      <td className=\"message-cell\">{contact.message}</td>\r\n                                                      <td>{new Date(contact.date).toLocaleString()}</td>\r\n                                                      <td>\r\n                                                      <Button\r\n                                                      variant=\"danger\"\r\n                                                      onClick={() => handleDeleteContact(contact._id)}\r\n                                                      >\r\n                                                      Delete\r\n                                                      </Button>\r\n                                                      </td>\r\n                                                      </tr>\r\n                                                      ))}\r\n                                                      </tbody>\r\n                                                      </Table>\r\n                                                      </section>\r\n                                                      </Container>\r\n                                                      );\r\n                                                      };\r\n                                                      export default DashboardPage;\r\n                                                      */\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Container","Table","Button","format","jsxDEV","_jsxDEV","DashboardPage","_s","appointments","setAppointments","contacts","setContacts","error","setError","selectedAppointments","setSelectedAppointments","fetchAppointments","data","get","fetchContacts","err","totalAppointments","length","handleAppointmentClick","id","includes","handleDeleteAppointment","delete","filter","appointment","_id","handleDeleteContact","contact","className","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","responsive","map","style","backgroundColor","color","cursor","onClick","name","phoneNumber","Date","date","time","variant","e","stopPropagation","phone","subject","message","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/SOL/Desktop/BDC/front/src/pages/DashboardPage.js"],"sourcesContent":["\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Table, Button } from \"react-bootstrap\";\r\nimport \"./dashboard.css\";\r\nimport { format } from 'date-fns';\r\n//import AppointmentCard from '../components/AppointmentCard';\r\n\r\nconst DashboardPage = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedAppointments, setSelectedAppointments] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    //fetch appointments************************************************\r\n    const fetchAppointments = async () => {\r\n      const { data } = await axios.get(\r\n        \"http://localhost:5000/api/appointments\"\r\n      );\r\n      setAppointments(data);\r\n    };\r\n\r\n\r\n    //fetch contacts messages*******************************************\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"http://localhost:5000/api/contact\");\r\n        setContacts(data);\r\n      } catch (err) {\r\n        setError(\"Error fetching contacts\");\r\n      }\r\n    };\r\n    fetchAppointments();\r\n    fetchContacts();\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n  const totalAppointments = appointments.length;\r\n\r\n  const handleAppointmentClick = (id) => {\r\n    if (!selectedAppointments.includes(id)) {\r\n      setSelectedAppointments([...selectedAppointments, id]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAppointment = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/appointments/${id}`);\r\n      setAppointments(appointments.filter((appointment) => appointment._id !== id));\r\n    } catch (err) {\r\n      setError(\"Error deleting appointment\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteContact = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/contact/${id}`);\r\n      setContacts(contacts.filter((contact) => contact._id !== id));\r\n    } catch (err) {\r\n      setError(\"Error deleting contact\");\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2>Dashboard</h2>\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <section className=\"mt-5\">\r\n        <h3 className=\"mb-5\">Nombre de Rendez-vous: {totalAppointments}</h3>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Nom complet</th>\r\n              <th>Téléphone</th>\r\n              <th>Date</th>\r\n              <th>Heur</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appointments.map((appointment) => (\r\n              <tr\r\n                key={appointment._id}\r\n                style={{\r\n                  backgroundColor: selectedAppointments.includes(\r\n                    appointment._id\r\n                  )\r\n                    ? \"red\"\r\n                    : \"inherit\",\r\n                  color: selectedAppointments.includes(appointment._id)\r\n                    ? \"white\"\r\n                    : \"black\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => handleAppointmentClick(appointment._id)}\r\n              >\r\n                <td>{appointment.name}</td>\r\n                <td>{appointment.phoneNumber}</td>\r\n                <td>{format(new Date(appointment.date), 'yyyy-MM-dd')}</td>\r\n              <td>{format(new Date(`1970-01-01T${appointment.time}Z`), 'HH:mm')}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDeleteAppointment(appointment._id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </section>\r\n      <section className=\"mt-5\">\r\n        <h2 className=\"mt-5\">Contact Messages</h2>\r\n        {/* <p>Total Contacts: {totalContacts}</p> */}\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Subject</th>\r\n              <th>Message</th>\r\n              <th>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) => (\r\n              <tr key={contact._id}>\r\n                <td>{contact.name}</td>\r\n                <td>{contact.phone}</td>\r\n                <td>{contact.subject}</td>\r\n                <td className=\"message-cell\">{contact.message}</td>\r\n                <td>{new Date(contact.date).toLocaleString()}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDeleteContact(contact._id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </section>\r\n      \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n\r\n/* \r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container, Table, Button } from \"react-bootstrap\";\r\nimport \"./dashboard.css\";\r\nimport { format } from 'date-fns';\r\n//import AppointmentCard from '../components/AppointmentCard';\r\n\r\nconst DashboardPage = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedAppointments, setSelectedAppointments] = useState([]);\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    //fetch appointments************************************************\r\n    const fetchAppointments = async () => {\r\n      const { data } = await axios.get(\r\n        \"http://localhost:5000/api/appointments\"\r\n      );\r\n      setAppointments(data);\r\n    };\r\n\r\n\r\n    //fetch contacts messages*******************************************\r\n    const fetchContacts = async () => {\r\n      try {\r\n        const { data } = await axios.get(\"http://localhost:5000/api/contact\");\r\n        setContacts(data);\r\n      } catch (err) {\r\n        setError(\"Error fetching contacts\");\r\n      }\r\n    };\r\n    fetchAppointments();\r\n    fetchContacts();\r\n    \r\n  }, []);\r\n\r\n  \r\n\r\n  const totalAppointments = appointments.length;\r\n\r\n  const handleAppointmentClick = (id) => {\r\n    if (!selectedAppointments.includes(id)) {\r\n      setSelectedAppointments([...selectedAppointments, id]);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAppointment = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/appointments/${id}`);\r\n      setAppointments(appointments.filter((appointment) => appointment._id !== id));\r\n    } catch (err) {\r\n      setError(\"Error deleting appointment\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteContact = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/contact/${id}`);\r\n      setContacts(contacts.filter((contact) => contact._id !== id));\r\n    } catch (err) {\r\n      setError(\"Error deleting contact\");\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2>Dashboard</h2>\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <section className=\"mt-5\">\r\n        <h3 className=\"mb-5\">Nombre de Rendez-vous: {totalAppointments}</h3>\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>phoneNumber</th>\r\n              <th>Date</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appointments.map((appointment) => (\r\n              <tr\r\n                key={appointment._id}\r\n                style={{\r\n                  backgroundColor: selectedAppointments.includes(\r\n                    appointment._id\r\n                  )\r\n                    ? \"red\"\r\n                    : \"inherit\",\r\n                  color: selectedAppointments.includes(appointment._id)\r\n                    ? \"white\"\r\n                    : \"black\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => handleAppointmentClick(appointment._id)}\r\n              >\r\n                <td>{appointment.name}</td>\r\n                <td>{appointment.phoneNumber}</td>\r\n                <td>{format(new Date(appointment.date), 'yyyy-MM-dd')}</td>\r\n              <td>{format(new Date(`1970-01-01T${appointment.time}Z`), 'HH:mm')}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleDeleteAppointment(appointment._id);\r\n                    }}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </section>\r\n      <section className=\"mt-5\">\r\n        <h2 className=\"mt-5\">Contact Messages</h2>\r\n        {/* <p>Total Contacts: {totalContacts}</p> */ /*}/*\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Subject</th>\r\n              <th>Message</th>\r\n              <th>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {contacts.map((contact) => (\r\n              <tr key={contact._id}>\r\n                <td>{contact.name}</td>\r\n                <td>{contact.phone}</td>\r\n                <td>{contact.subject}</td>\r\n                <td className=\"message-cell\">{contact.message}</td>\r\n                <td>{new Date(contact.date).toLocaleString()}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDeleteContact(contact._id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </section>\r\n      \r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DashboardPage;\r\n\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}